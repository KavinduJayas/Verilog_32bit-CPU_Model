$date
	Tue Oct 20 22:06:05 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbed $end
$var wire 8 ! OUT2 [7:0] $end
$var wire 8 " OUT1 [7:0] $end
$var reg 1 # CLK $end
$var reg 8 $ IN [7:0] $end
$var reg 3 % INADDRESS [2:0] $end
$var reg 3 & OUT1ADDRESS [2:0] $end
$var reg 3 ' OUT2ADDRESS [2:0] $end
$var reg 1 ( RESET $end
$var reg 1 ) WRITE $end
$scope module myreg $end
$var wire 1 # CLK $end
$var wire 8 * IN [7:0] $end
$var wire 3 + INADDRESS [2:0] $end
$var wire 8 , OUT1 [7:0] $end
$var wire 3 - OUT1ADDRESS [2:0] $end
$var wire 8 . OUT2 [7:0] $end
$var wire 3 / OUT2ADDRESS [2:0] $end
$var wire 1 ( RESET $end
$var wire 1 ) WRITE $end
$var integer 32 0 i [31:0] $end
$var integer 32 1 index_in [31:0] $end
$var integer 32 2 index_out1 [31:0] $end
$var integer 32 3 index_out2 [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
x)
x(
bx '
bx &
bx %
bx $
0#
bx "
bx !
$end
#5
b1 3
b0 2
b0xxx 1
b1 '
b1 /
b0 &
b0 -
0)
1(
#10
b1000 0
1#
#12
b0 !
b0 .
b0 "
b0 ,
#20
0#
#25
b10 2
b10 1
b10 &
b10 -
b10 %
b10 +
b11111 $
b11111 *
1)
0(
#30
1#
#32
b11111 "
b11111 ,
#39
b11 2
b11 1
b11 &
b11 -
b11 %
b11 +
b1111 $
b1111 *
#40
0#
#41
b0 "
b0 ,
#45
b100 3
b100 1
b100 '
b100 /
b100 %
b100 +
b1010101 $
b1010101 *
#50
1#
#52
b1010101 !
b1010101 .
#60
0#
#70
b10 3
b10 1
1#
b10 '
b10 /
b11111111 $
b11111111 *
b10 %
b10 +
#72
b11111111 !
b11111111 .
#80
0#
#90
1#
#100
0#
