$date
	Tue Oct 20 20:50:52 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbed $end
$var wire 8 ! OUT2 [7:0] $end
$var wire 8 " OUT1 [7:0] $end
$var reg 1 # CLK $end
$var reg 8 $ IN [7:0] $end
$var reg 3 % INADDRESS [2:0] $end
$var reg 3 & OUT1ADDRESS [2:0] $end
$var reg 3 ' OUT2ADDRESS [2:0] $end
$var reg 1 ( RESET $end
$var reg 1 ) WRITE $end
$scope module myreg $end
$var wire 1 # CLK $end
$var wire 8 * IN [7:0] $end
$var wire 3 + INADDRESS [2:0] $end
$var wire 8 , OUT1 [7:0] $end
$var wire 3 - OUT1ADDRESS [2:0] $end
$var wire 8 . OUT2 [7:0] $end
$var wire 3 / OUT2ADDRESS [2:0] $end
$var wire 1 ( RESET $end
$var wire 1 ) WRITE $end
$var integer 32 0 i [31:0] $end
$var integer 32 1 index_in [31:0] $end
$var integer 32 2 index_out1 [31:0] $end
$var integer 32 3 index_out2 [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
x)
x(
bx '
bx &
bx %
bx $
0#
bx "
bx !
$end
#5
0)
1(
#10
b1000 0
1#
#15
b0xxx 3
b0xxx 2
b0 1
b0 %
b0 +
b10001 $
b10001 *
1)
0(
#20
0#
#25
b1 1
b1 %
b1 +
b10001000 $
b10001000 *
#30
1#
#35
b0 1
b0 %
b0 +
b10001 $
b10001 *
0)
#40
0#
#50
b1 3
b0 2
1#
b1 '
b1 /
b0 &
b0 -
#52
b10001000 !
b10001000 .
b0 "
b0 ,
#60
0#
#70
1#
#80
0#
#90
1#
#100
0#
