$date
	Mon Nov  2 10:19:05 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 32 ! PC [31:0] $end
$var wire 32 " INSTRUCTION [31:0] $end
$var reg 1 # CLK $end
$var reg 1 $ RESET $end
$scope module mycpu $end
$var wire 1 # CLK $end
$var wire 32 % INSTRUCTION [31:0] $end
$var wire 1 $ RESET $end
$var wire 1 & ZERO_AND_BRANCHFLAG $end
$var wire 1 ' ZERO $end
$var wire 3 ( WRITEREG [2:0] $end
$var wire 1 ) WRITEENABLE $end
$var wire 8 * REGOUT2 [7:0] $end
$var wire 8 + REGOUT1 [7:0] $end
$var wire 3 , READREG2 [2:0] $end
$var wire 3 - READREG1 [2:0] $end
$var wire 32 . PC_PLUS4 [31:0] $end
$var wire 32 / PC_NEXT_JUMP [31:0] $end
$var wire 8 0 JUMP_IMMEDIATE_RAW [7:0] $end
$var wire 32 1 JUMP_IMMEDIATE_FINAL [31:0] $end
$var wire 1 2 JUMP_FALG $end
$var wire 1 3 IMMEDIATE_FALG $end
$var wire 8 4 IMMEDIATE [7:0] $end
$var wire 1 5 COMPLEMENT_FLAG $end
$var wire 8 6 COMPLEMENTED_OUT [7:0] $end
$var wire 1 7 BRANCH_FALG $end
$var wire 8 8 ALU_RESULT [7:0] $end
$var wire 3 9 ALUOP [2:0] $end
$var reg 8 : COMPLEMENT_MUX_OUT [7:0] $end
$var reg 8 ; IMMEDIATE_MUX_OUT [7:0] $end
$var reg 32 < MUX_3_OUT [31:0] $end
$var reg 32 = PC [31:0] $end
$var reg 32 > PC_NEXT [31:0] $end
$scope module ALU $end
$var wire 8 ? DATA2 [7:0] $end
$var wire 8 @ or_out [7:0] $end
$var wire 8 A forward_out [7:0] $end
$var wire 8 B and_out [7:0] $end
$var wire 8 C add_out [7:0] $end
$var wire 3 D SELECT [2:0] $end
$var wire 8 E DATA1 [7:0] $end
$var reg 8 F RESULT [7:0] $end
$var reg 1 ' ZERO $end
$scope module Add $end
$var wire 8 G DATA2 [7:0] $end
$var wire 8 H RESULT [7:0] $end
$var wire 8 I DATA1 [7:0] $end
$upscope $end
$scope module And $end
$var wire 8 J DATA2 [7:0] $end
$var wire 8 K RESULT [7:0] $end
$var wire 8 L DATA1 [7:0] $end
$upscope $end
$scope module Forward $end
$var wire 8 M DATA2 [7:0] $end
$var wire 8 N RESULT [7:0] $end
$upscope $end
$scope module Or $end
$var wire 8 O DATA2 [7:0] $end
$var wire 8 P RESULT [7:0] $end
$var wire 8 Q DATA1 [7:0] $end
$upscope $end
$upscope $end
$scope module complementor $end
$var wire 8 R REGOUT2 [7:0] $end
$var wire 8 S COMPLEMENTED_OUT [7:0] $end
$upscope $end
$scope module ctrlUnit $end
$var wire 32 T INSTRUCTION [31:0] $end
$var wire 8 U opcode [7:0] $end
$var reg 3 V ALUOP [2:0] $end
$var reg 1 7 BRANCH_FALG $end
$var reg 1 5 COMPLEMENT_FLAG $end
$var reg 1 3 IMMEDIATE_FALG $end
$var reg 1 2 JUMP_FALG $end
$var reg 1 ) WRITEENABLE $end
$upscope $end
$scope module pcJumpNext $end
$var wire 32 W JUMP_IMMEDIATE_FINAL [31:0] $end
$var wire 32 X PC_PLUS4 [31:0] $end
$var wire 32 Y PC_NEXT_JUMP [31:0] $end
$upscope $end
$scope module pcNext $end
$var wire 32 Z PC [31:0] $end
$var wire 32 [ PC_PLUS4 [31:0] $end
$upscope $end
$scope module regFile $end
$var wire 1 # CLK $end
$var wire 8 \ IN [7:0] $end
$var wire 3 ] INADDRESS [2:0] $end
$var wire 8 ^ OUT1 [7:0] $end
$var wire 3 _ OUT1ADDRESS [2:0] $end
$var wire 8 ` OUT2 [7:0] $end
$var wire 3 a OUT2ADDRESS [2:0] $end
$var wire 1 $ RESET $end
$var wire 1 ) WRITE $end
$var integer 32 b i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx00 W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
x7
bx 6
x5
bx 4
x3
x2
bx00 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
x)
bx (
x'
x&
bx %
1$
0#
bx "
bx !
$end
#4
b1000 b
1#
#5
b0 !
b0 =
b0 Z
0$
#6
b100 .
b100 X
b100 [
#7
b1 (
b1 ]
b0 -
b0 _
b1 ,
b1 a
b1 4
b100 1
b100 W
b1 0
b0 U
b10000000000000001 "
b10000000000000001 %
b10000000000000001 T
#8
b100 >
b100 <
b1 ;
b1 ?
b1 G
b1 J
b1 M
b1 O
0&
b0 9
b0 D
b0 V
02
07
13
05
1)
0#
#9
b0 :
b1 8
b1 F
b1 \
b0x B
b0x K
bx1 @
bx1 P
b1 A
b1 N
b0 +
b0 E
b0 I
b0 L
b0 Q
b0 ^
b0 *
b0 R
b0 `
b1000 /
b1000 Y
#10
b1 @
b1 P
b0 B
b0 K
b0 6
b0 S
#11
0'
b1 C
b1 H
#12
1#
#13
b100 !
b100 =
b100 Z
#14
b1000 >
b1000 <
b1000 .
b1000 X
b1000 [
#15
b10 ;
b10 ?
b10 G
b10 J
b10 M
b10 O
b1 :
b10 (
b10 ]
b10 ,
b10 a
b10 4
b1000 1
b1000 W
b10 0
b1 *
b1 R
b1 `
b100000000000000010 "
b100000000000000010 %
b100000000000000010 T
#16
b10 8
b10 F
b10 \
b10 @
b10 P
b10 A
b10 N
b11111111 6
b11111111 S
0#
#17
b0 :
b10 C
b10 H
b0 *
b0 R
b0 `
b10000 /
b10000 Y
#18
b0 6
b0 S
#20
1#
#21
b1000 !
b1000 =
b1000 Z
#22
b1100 >
b1100 <
b1100 .
b1100 X
b1100 [
#23
b0 ;
b0 ?
b0 G
b0 J
b0 M
b0 O
b10 :
b0 ,
b0 a
b0 4
b110 U
b10 *
b10 R
b10 `
b110000000100000000000000000 "
b110000000100000000000000000 %
b110000000100000000000000000 T
#24
b10100 >
b10 ;
b10 ?
b10 G
b10 J
b10 M
b10 O
12
03
0)
b0 8
b0 F
b0 \
b0 @
b0 P
b0 A
b0 N
b11111110 6
b11111110 S
b10100 /
b10100 Y
0#
#25
b0 ;
b0 ?
b0 G
b0 J
b0 M
b0 O
b0 :
b10 8
b10 F
b10 \
b10 @
b10 P
b10 A
b10 N
b0 *
b0 R
b0 `
#26
b0 8
b0 F
b0 \
b0 @
b0 P
b0 A
b0 N
b0 6
b0 S
#27
1'
b0 C
b0 H
#28
1#
#29
b10100 !
b10100 =
b10100 Z
#30
b11000 <
b11000 .
b11000 X
b11000 [
#31
b101 (
b101 ]
b101 ,
b101 a
b101 4
b10100 1
b10100 W
b101 0
b0 U
b1010000000000000101 "
b1010000000000000101 %
b1010000000000000101 T
#32
b11000 >
b101 ;
b101 ?
b101 G
b101 J
b101 M
b101 O
02
13
1)
0#
#33
b101 8
b101 F
b101 \
b101 @
b101 P
b101 A
b101 N
b101100 /
b101100 Y
#34
0'
b101 C
b101 H
#36
1#
#37
b11000 !
b11000 =
b11000 Z
#38
b11100 >
b11100 <
b11100 .
b11100 X
b11100 [
#39
b11 ;
b11 ?
b11 G
b11 J
b11 M
b11 O
b101 :
b11 (
b11 ]
b11 ,
b11 a
b11 4
b1100 1
b1100 W
b11 0
b101 *
b101 R
b101 `
b110000000000000011 "
b110000000000000011 %
b110000000000000011 T
#40
b11 8
b11 F
b11 \
b11 @
b11 P
b11 A
b11 N
b11111011 6
b11111011 S
0#
#41
b0 :
b11 C
b11 H
b0 *
b0 R
b0 `
b101000 /
b101000 Y
#42
b0 6
b0 S
#44
1#
#45
b11100 !
b11100 =
b11100 Z
#46
b100000 >
b100000 <
b100000 .
b100000 X
b100000 [
#47
b11 :
b110 (
b110 ]
b101 -
b101 _
b11000 1
b11000 W
b110 0
b11 U
b11 *
b11 R
b11 `
b11000001100000010100000011 "
b11000001100000010100000011 %
b11000001100000010100000011 T
#48
b11111101 ;
b11111101 ?
b11111101 G
b11111101 J
b11111101 M
b11111101 O
b11111101 :
b1 9
b1 D
b1 V
03
15
b11111101 6
b11111101 S
0#
#49
b11111101 @
b11111101 P
b11111101 A
b11111101 N
b101 +
b101 E
b101 I
b101 L
b101 Q
b101 ^
b111000 /
b111000 Y
#50
b101 B
b101 K
#51
b10 8
b10 F
b10 \
b10 C
b10 H
#52
1#
#53
b100000 !
b100000 =
b100000 Z
#54
b100100 >
b100100 <
b100100 .
b100100 X
b100100 [
#55
b1 (
b1 ]
b110 -
b110 _
b10 ,
b10 a
b10 4
b100 1
b100 W
b1 0
b111 U
b111000000010000011000000010 "
b111000000010000011000000010 %
b111000000010000011000000010 T
#56
b101 8
b101 F
b101 \
b10 9
b10 D
b10 V
17
0)
0#
#57
b10 +
b10 E
b10 I
b10 L
b10 Q
b10 ^
b10 *
b10 R
b10 `
b101000 /
b101000 Y
#58
b11111110 ;
b11111110 ?
b11111110 G
b11111110 J
b11111110 M
b11111110 O
b11111110 :
b0 8
b0 F
b0 \
b11111111 @
b11111111 P
b0 B
b0 K
b11111110 6
b11111110 S
#59
b10 8
b10 F
b10 \
b10 B
b10 K
b11111110 @
b11111110 P
b11111110 A
b11111110 N
#60
b101000 >
b101000 <
1&
1'
b0 C
b0 H
1#
#61
b100100 !
b100100 =
b100100 Z
#62
b101000 .
b101000 X
b101000 [
#63
b110 (
b110 ]
b0 -
b0 _
b110 ,
b110 a
b110 4
b11000 1
b11000 W
b110 0
b0 U
b1100000000000000110 "
b1100000000000000110 %
b1100000000000000110 T
#64
b110 ;
b110 ?
b110 G
b110 J
b110 M
b110 O
b10 :
b11111110 8
b11111110 F
b11111110 \
0&
b0 9
b0 D
b0 V
07
13
05
1)
0#
#65
b110 8
b110 F
b110 \
b110 @
b110 P
b110 A
b110 N
b0 +
b0 E
b0 I
b0 L
b0 Q
b0 ^
b1000000 /
b1000000 Y
#66
b0 B
b0 K
#67
0'
b110 C
b110 H
#68
1#
#69
b101000 !
b101000 =
b101000 Z
#70
b101100 >
b101100 <
b101100 .
b101100 X
b101100 [
#71
b111 ;
b111 ?
b111 G
b111 J
b111 M
b111 O
b110 :
b111 (
b111 ]
b111 ,
b111 a
b111 4
b11100 1
b11100 W
b111 0
b110 *
b110 R
b110 `
b1110000000000000111 "
b1110000000000000111 %
b1110000000000000111 T
#72
b111 8
b111 F
b111 \
b111 @
b111 P
b111 A
b111 N
b11111010 6
b11111010 S
0#
#73
b0 :
b111 C
b111 H
b0 *
b0 R
b0 `
b1001000 /
b1001000 Y
#74
b0 6
b0 S
#76
1#
#77
b101100 !
b101100 =
b101100 Z
#78
b110000 >
b110000 <
b110000 .
b110000 X
b110000 [
#79
bx ;
bx ?
bx G
bx J
bx M
bx O
b111 :
bx (
bx ]
bx -
bx _
bx ,
bx a
bx 4
bx00 1
bx00 W
bx 0
bx U
b111 *
b111 R
b111 `
bx "
bx %
bx T
#80
bz 9
bz D
bz V
z3
z5
z)
bx 8
bx F
bx \
bx @
bx P
bx A
bx N
b11111001 6
b11111001 S
0#
#81
bx C
bx H
bx +
bx E
bx I
bx L
bx Q
bx ^
bx *
bx R
bx `
bx /
bx Y
#82
bx B
bx K
bx 6
bx S
#84
1#
#85
b110000 !
b110000 =
b110000 Z
#86
b110100 >
b110100 <
b110100 .
b110100 X
b110100 [
#88
0#
#92
1#
#93
b110100 !
b110100 =
b110100 Z
#94
b111000 >
b111000 <
b111000 .
b111000 X
b111000 [
#96
0#
#100
1#
#101
b111000 !
b111000 =
b111000 Z
#102
b111100 >
b111100 <
b111100 .
b111100 X
b111100 [
#104
0#
#108
1#
#109
b111100 !
b111100 =
b111100 Z
#110
b1000000 >
b1000000 <
b1000000 .
b1000000 X
b1000000 [
#112
0#
#116
1#
#117
b1000000 !
b1000000 =
b1000000 Z
#118
b1000100 >
b1000100 <
b1000100 .
b1000100 X
b1000100 [
#120
0#
#124
1#
#125
b1000100 !
b1000100 =
b1000100 Z
#126
b1001000 >
b1001000 <
b1001000 .
b1001000 X
b1001000 [
#128
0#
#132
1#
#133
b1001000 !
b1001000 =
b1001000 Z
#134
b1001100 >
b1001100 <
b1001100 .
b1001100 X
b1001100 [
#136
0#
#140
1#
#141
b1001100 !
b1001100 =
b1001100 Z
#142
b1010000 >
b1010000 <
b1010000 .
b1010000 X
b1010000 [
#144
0#
#148
1#
#149
b1010000 !
b1010000 =
b1010000 Z
#150
b1010100 >
b1010100 <
b1010100 .
b1010100 X
b1010100 [
#152
0#
#156
1#
#157
b1010100 !
b1010100 =
b1010100 Z
#158
b1011000 >
b1011000 <
b1011000 .
b1011000 X
b1011000 [
#160
0#
#164
1#
#165
b1011000 !
b1011000 =
b1011000 Z
#166
b1011100 >
b1011100 <
b1011100 .
b1011100 X
b1011100 [
#168
0#
#172
1#
#173
b1011100 !
b1011100 =
b1011100 Z
#174
b1100000 >
b1100000 <
b1100000 .
b1100000 X
b1100000 [
#176
0#
#180
1#
#181
b1100000 !
b1100000 =
b1100000 Z
#182
b1100100 >
b1100100 <
b1100100 .
b1100100 X
b1100100 [
#184
0#
#188
1#
#189
b1100100 !
b1100100 =
b1100100 Z
#190
b1101000 >
b1101000 <
b1101000 .
b1101000 X
b1101000 [
#192
0#
#196
1#
#197
b1101000 !
b1101000 =
b1101000 Z
#198
b1101100 >
b1101100 <
b1101100 .
b1101100 X
b1101100 [
#200
0#
#204
1#
#205
b1101100 !
b1101100 =
b1101100 Z
#206
b1110000 >
b1110000 <
b1110000 .
b1110000 X
b1110000 [
#208
0#
#212
1#
#213
b1110000 !
b1110000 =
b1110000 Z
#214
b1110100 >
b1110100 <
b1110100 .
b1110100 X
b1110100 [
#216
0#
#220
1#
#221
b1110100 !
b1110100 =
b1110100 Z
#222
b1111000 >
b1111000 <
b1111000 .
b1111000 X
b1111000 [
#224
0#
#228
1#
#229
b1111000 !
b1111000 =
b1111000 Z
#230
b1111100 >
b1111100 <
b1111100 .
b1111100 X
b1111100 [
#232
0#
#236
1#
#237
b1111100 !
b1111100 =
b1111100 Z
#238
b10000000 >
b10000000 <
b10000000 .
b10000000 X
b10000000 [
#240
0#
#244
1#
#245
b10000000 !
b10000000 =
b10000000 Z
#246
b10000100 >
b10000100 <
b10000100 .
b10000100 X
b10000100 [
#248
0#
#252
1#
#253
b10000100 !
b10000100 =
b10000100 Z
#254
b10001000 >
b10001000 <
b10001000 .
b10001000 X
b10001000 [
#256
0#
#260
1#
#261
b10001000 !
b10001000 =
b10001000 Z
#262
b10001100 >
b10001100 <
b10001100 .
b10001100 X
b10001100 [
#264
0#
#268
1#
#269
b10001100 !
b10001100 =
b10001100 Z
#270
b10010000 >
b10010000 <
b10010000 .
b10010000 X
b10010000 [
#272
0#
#276
1#
#277
b10010000 !
b10010000 =
b10010000 Z
#278
b10010100 >
b10010100 <
b10010100 .
b10010100 X
b10010100 [
#280
0#
#284
1#
#285
b10010100 !
b10010100 =
b10010100 Z
#286
b10011000 >
b10011000 <
b10011000 .
b10011000 X
b10011000 [
#288
0#
#292
1#
#293
b10011000 !
b10011000 =
b10011000 Z
#294
b10011100 >
b10011100 <
b10011100 .
b10011100 X
b10011100 [
#296
0#
#300
1#
#301
b10011100 !
b10011100 =
b10011100 Z
#302
b10100000 >
b10100000 <
b10100000 .
b10100000 X
b10100000 [
#304
0#
#308
1#
#309
b10100000 !
b10100000 =
b10100000 Z
#310
b10100100 >
b10100100 <
b10100100 .
b10100100 X
b10100100 [
#312
0#
#316
1#
#317
b10100100 !
b10100100 =
b10100100 Z
#318
b10101000 >
b10101000 <
b10101000 .
b10101000 X
b10101000 [
#320
0#
#324
1#
#325
b10101000 !
b10101000 =
b10101000 Z
#326
b10101100 >
b10101100 <
b10101100 .
b10101100 X
b10101100 [
#328
0#
#332
1#
#333
b10101100 !
b10101100 =
b10101100 Z
#334
b10110000 >
b10110000 <
b10110000 .
b10110000 X
b10110000 [
#336
0#
#340
1#
#341
b10110000 !
b10110000 =
b10110000 Z
#342
b10110100 >
b10110100 <
b10110100 .
b10110100 X
b10110100 [
#344
0#
#348
1#
#349
b10110100 !
b10110100 =
b10110100 Z
#350
b10111000 >
b10111000 <
b10111000 .
b10111000 X
b10111000 [
#352
0#
#356
1#
#357
b10111000 !
b10111000 =
b10111000 Z
#358
b10111100 >
b10111100 <
b10111100 .
b10111100 X
b10111100 [
#360
0#
#364
1#
#365
b10111100 !
b10111100 =
b10111100 Z
#366
b11000000 >
b11000000 <
b11000000 .
b11000000 X
b11000000 [
#368
0#
#372
1#
#373
b11000000 !
b11000000 =
b11000000 Z
#374
b11000100 >
b11000100 <
b11000100 .
b11000100 X
b11000100 [
#376
0#
#380
1#
#381
b11000100 !
b11000100 =
b11000100 Z
#382
b11001000 >
b11001000 <
b11001000 .
b11001000 X
b11001000 [
#384
0#
#388
1#
#389
b11001000 !
b11001000 =
b11001000 Z
#390
b11001100 >
b11001100 <
b11001100 .
b11001100 X
b11001100 [
#392
0#
#396
1#
#397
b11001100 !
b11001100 =
b11001100 Z
#398
b11010000 >
b11010000 <
b11010000 .
b11010000 X
b11010000 [
#400
0#
#404
1#
#405
b11010000 !
b11010000 =
b11010000 Z
#406
b11010100 >
b11010100 <
b11010100 .
b11010100 X
b11010100 [
#408
0#
#412
1#
#413
b11010100 !
b11010100 =
b11010100 Z
#414
b11011000 >
b11011000 <
b11011000 .
b11011000 X
b11011000 [
#416
0#
#420
1#
#421
b11011000 !
b11011000 =
b11011000 Z
#422
b11011100 >
b11011100 <
b11011100 .
b11011100 X
b11011100 [
#424
0#
#428
1#
#429
b11011100 !
b11011100 =
b11011100 Z
#430
b11100000 >
b11100000 <
b11100000 .
b11100000 X
b11100000 [
#432
0#
#436
1#
#437
b11100000 !
b11100000 =
b11100000 Z
#438
b11100100 >
b11100100 <
b11100100 .
b11100100 X
b11100100 [
#440
0#
#444
1#
#445
b11100100 !
b11100100 =
b11100100 Z
#446
b11101000 >
b11101000 <
b11101000 .
b11101000 X
b11101000 [
#448
0#
#452
1#
#453
b11101000 !
b11101000 =
b11101000 Z
#454
b11101100 >
b11101100 <
b11101100 .
b11101100 X
b11101100 [
#456
0#
#460
1#
#461
b11101100 !
b11101100 =
b11101100 Z
#462
b11110000 >
b11110000 <
b11110000 .
b11110000 X
b11110000 [
#464
0#
#468
1#
#469
b11110000 !
b11110000 =
b11110000 Z
#470
b11110100 >
b11110100 <
b11110100 .
b11110100 X
b11110100 [
#472
0#
#476
1#
#477
b11110100 !
b11110100 =
b11110100 Z
#478
b11111000 >
b11111000 <
b11111000 .
b11111000 X
b11111000 [
#480
0#
#484
1#
#485
b11111000 !
b11111000 =
b11111000 Z
#486
b11111100 >
b11111100 <
b11111100 .
b11111100 X
b11111100 [
#488
0#
#492
1#
#493
b11111100 !
b11111100 =
b11111100 Z
#494
b100000000 >
b100000000 <
b100000000 .
b100000000 X
b100000000 [
#496
0#
#500
1#
#501
b100000000 !
b100000000 =
b100000000 Z
#502
b100000100 >
b100000100 <
b100000100 .
b100000100 X
b100000100 [
#504
0#
#505
